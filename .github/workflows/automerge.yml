name: Auto Merge

on:
  pull_request_target:
    types:
      - opened
      - reopened
      - ready_for_review
      - synchronize
      - labeled

jobs:
  automerge:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
    steps:
      - name: Attempt automatic merge
        uses: actions/github-script@v7
        with:
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const pull_number = context.payload.pull_request.number;

            const { data: pr } = await github.rest.pulls.get({ owner, repo, pull_number });

            const hasLabel = pr.labels.some((label) => label.name.toLowerCase() === 'automerge');
            if (!hasLabel) {
              core.info('Automerge label not present; skipping.');
              return;
            }

            if (pr.draft) {
              core.notice('Pull request is still a draft; will not attempt to merge.');
              return;
            }

            if (!pr.mergeable) {
              core.notice(`Pull request is not mergeable yet (state: ${pr.mergeable_state}).`);
              return;
            }

            const allowedStates = ['clean', 'has_hooks', 'unstable'];
            if (!allowedStates.includes(pr.mergeable_state)) {
              core.notice(`Mergeable state "${pr.mergeable_state}" is not ready for auto-merge.`);
              return;
            }

            await github.rest.pulls.merge({
              owner,
              repo,
              pull_number,
              merge_method: 'squash',
            });

            core.notice('Pull request merged automatically with squash strategy.');
