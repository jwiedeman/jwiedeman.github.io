name: Force Auto Merge All PRs

on:
  pull_request_target:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
      - labeled
      - unlabeled

jobs:
  merge-immediately:
    name: Merge pull request without waiting for checks
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Approve PR
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;

            if (!pr) {
              core.warning('No pull request payload available.');
              return;
            }

            if (pr.state !== 'open') {
              core.info(`Pull request #${pr.number} is not open (state: ${pr.state}).`);
              return;
            }

            try {
              await github.rest.pulls.createReview({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr.number,
                event: 'APPROVE',
                body: 'Automatically approving this pull request.',
              });
              core.notice(`Approved pull request #${pr.number}.`);
            } catch (error) {
              core.warning(`Unable to approve pull request #${pr.number}: ${error.message}`);
            }

      - name: Merge PR
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;

            if (!pr) {
              core.warning('No pull request payload available.');
              return;
            }

            if (pr.merged) {
              core.info(`Pull request #${pr.number} is already merged.`);
              return;
            }

            if (pr.state !== 'open') {
              core.info(`Pull request #${pr.number} is not open (state: ${pr.state}).`);
              return;
            }

            try {
              await github.rest.pulls.merge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr.number,
                merge_method: 'squash',
              });
              core.notice(`Pull request #${pr.number} merged automatically without waiting for checks.`);
            } catch (error) {
              core.warning(`Failed to merge pull request #${pr.number}: ${error.message}`);
            }
