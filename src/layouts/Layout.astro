---
import '../styles/global.css';
import Nav from '../components/Nav.astro';
import Footer from '../components/Footer.astro';

const {
  title: propTitle,
  description: propDescription,
  showNav = true,
  showFooter = true,
  frontmatter = {}
} = Astro.props;

const title = propTitle ?? frontmatter.title ?? 'JWiedeman';
const description =
  propDescription ?? frontmatter.description ?? 'Interstellar web projects by Joshua Wiedeman.';

const rawSegments = Astro.url.pathname.split('/').filter(Boolean);

const formatSegment = (segment: string) => {
  const cleaned = decodeURIComponent(segment)
    .replace(/[-_]+/g, ' ')
    .replace(/\s+/g, ' ')
    .trim();

  if (!cleaned) return '';

  return cleaned
    .split(' ')
    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))
    .join(' ');
};

const breadcrumbs = rawSegments
  .map((segment, index) => ({
    label: formatSegment(segment),
    href: `/${rawSegments.slice(0, index + 1).join('/')}`,
  }))
  .filter(({ label }) => label.length > 0);

const shouldShowBreadcrumbs = showNav && breadcrumbs.length > 0;
---
<!DOCTYPE html>
<html lang="en" class="theme-light">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content={description} />
    <title>Welcome / {title}</title>
  </head>
  <body>
    {showNav && <Nav />}
    {shouldShowBreadcrumbs && (
      <nav class="slug-trail hairline-bottom" aria-label="Breadcrumb">
        <ol class="container mono breadcrumb-list">
          {breadcrumbs.map((crumb, index) => (
            <li class="breadcrumb-item" key={crumb.href}>
              {index < breadcrumbs.length - 1 ? (
                <a href={crumb.href}>{crumb.label}</a>
              ) : (
                <span aria-current="page">{crumb.label}</span>
              )}
            </li>
          ))}
        </ol>
      </nav>
    )}
    <main>
      <slot />
    </main>
    {showFooter && <Footer />}
  </body>
</html>
