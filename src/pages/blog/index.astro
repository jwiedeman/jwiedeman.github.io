---
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';

const allPosts = (await getCollection('blog')).sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
const featured = allPosts.find(p => p.data.featured);
const posts = featured ? allPosts.filter(p => p.id !== featured.id) : allPosts;
const tags = Array.from(new Set(allPosts.flatMap(p => p.data.tags))).sort();
const postsPerPage = 4;
---
<Layout title="Blog">
  <div class="container">
    <h1>Blog</h1>

    <input id="search" type="search" placeholder="Search articles" />

    <div class="tags">
      {tags.map(tag => <button class="tag" data-tag={tag}>{tag}</button>)}
    </div>

    {featured && (
      <section class="featured">
        <h2 class="mono">Featured</h2>
        <article class="card post-card" data-tags={featured.data.tags.join(',')} data-title={featured.data.title.toLowerCase()} data-description={featured.data.description.toLowerCase()}>
          <div class="label mono">{featured.data.pubDate.toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' })}</div>
          <div>
            <h3><a href={`/blog/${featured.slug}/`}>{featured.data.title}</a></h3>
            <p>{featured.data.description}</p>
            <p class="mono">{featured.data.tags.join(', ')}</p>
          </div>
        </article>
      </section>
    )}

    <div id="posts" class="grid" data-posts-per-page={postsPerPage}>
      {posts.map(post => (
        <article class="card post-card span-6" data-tags={post.data.tags.join(',')} data-title={post.data.title.toLowerCase()} data-description={post.data.description.toLowerCase()}>
          <div class="label mono">{post.data.pubDate.toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' })}</div>
          <div>
            <h3><a href={`/blog/${post.slug}/`}>{post.data.title}</a></h3>
            <p>{post.data.description}</p>
            <p class="mono">{post.data.tags.join(', ')}</p>
          </div>
        </article>
      ))}
    </div>

    <div id="pagination" class="pagination"></div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const postsContainer = document.getElementById('posts');
      const posts = Array.from(postsContainer.querySelectorAll('.post-card'));
      const POSTS_PER_PAGE = parseInt(postsContainer?.dataset.postsPerPage || '1', 10);
      let currentPage = 1;
      const selectedTags = new Set();

      const searchInput = document.getElementById('search');
      const tagButtons = document.querySelectorAll('.tag');
      const pagination = document.getElementById('pagination');

      function filterPosts() {
        const q = searchInput.value.toLowerCase();
        posts.forEach(post => {
          const matchesSearch = post.dataset.title.includes(q) || post.dataset.description.includes(q);
          const tags = post.dataset.tags.split(',').map(t => t.trim());
          const matchesTags = [...selectedTags].every(tag => tags.includes(tag));
          post.hidden = !(matchesSearch && matchesTags);
        });
        currentPage = 1;
        paginate();
      }

      function paginate() {
        const visiblePosts = posts.filter(p => !p.hidden);
        const totalPages = Math.ceil(visiblePosts.length / POSTS_PER_PAGE) || 1;
        visiblePosts.forEach((post, index) => {
          const start = (currentPage - 1) * POSTS_PER_PAGE;
          const end = start + POSTS_PER_PAGE;
          post.style.display = index >= start && index < end ? '' : 'none';
        });
        pagination.innerHTML = '';
        for (let i = 1; i <= totalPages; i++) {
          const btn = document.createElement('button');
          btn.textContent = i;
          btn.className = 'page-btn' + (i === currentPage ? ' active' : '');
          btn.addEventListener('click', () => {
            currentPage = i;
            paginate();
          });
          pagination.appendChild(btn);
        }
      }

      searchInput.addEventListener('input', filterPosts);
      tagButtons.forEach(btn => {
        btn.addEventListener('click', () => {
          const tag = btn.dataset.tag;
          if (selectedTags.has(tag)) {
            selectedTags.delete(tag);
            btn.classList.remove('active');
          } else {
            selectedTags.add(tag);
            btn.classList.add('active');
          }
          filterPosts();
        });
      });

      filterPosts();
    });
  </script>
</Layout>
